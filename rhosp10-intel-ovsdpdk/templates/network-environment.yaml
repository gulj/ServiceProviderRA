#This file is an example of an environment file for defining the isolated
#networks and related parameters.
resource_registry:
  # Network Interface templates to use (these files must exist)
  OS::TripleO::Compute::Net::SoftwareConfig:
    /home/stack/templates/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig:
    /home/stack/templates/controller.yaml
  OS::TripleO::NodeUserData: /home/stack/templates/first-boot.yaml
  OS::TripleO::NodeExtraConfigPost: /home/stack/templates/post-install.yaml

parameter_defaults:
  # This section is where deployment-specific configuration is done
  # CIDR subnet mask length for provisioning network
  ControlPlaneSubnetCidr: '24'
  # Gateway router for the provisioning network (or Undercloud IP)
  ControlPlaneDefaultRoute: 172.20.9.1  #replace me with control plane network IP
  EC2MetadataIp: 172.20.9.1 # relace me with generally the IP of the Undercloud
  # Customize the IP subnets to match the local environment
  InternalApiNetCidr: 172.22.9.0/24   #replace me to suit real environment
  StorageNetCidr: 172.23.9.0/24       #replace me to suit real environment
  StorageMgmtNetCidr: 172.24.9.0/24   #replace me to suit real environment
  TenantNetCidr: 172.25.9.0/24        #replace me to suit real environment
  ExternalNetCidr: 10.240.116.0/22    #replace me to suit real environment
  # Customize the VLAN IDs to match the local environment
  InternalApiNetworkVlanID: 209      #replace me to suit real environment
  StorageNetworkVlanID: 309          #replace me to suit real environment
  StorageMgmtNetworkVlanID: 409      #replace me to suit real environment
  TenantNetworkVlanID: 509           #replace me to suit real environment
  ExternalNetworkVlanID: 100         #replace me to suit real environment
  # Customize the IP ranges on each network to use for static IPs and VIPs
  InternalApiAllocationPools: [{'start': '172.22.9.10', 'end': '172.22.9.200'}]    #replace me to suit real environment
  StorageAllocationPools: [{'start': '172.23.9.10', 'end': '172.23.9.200'}]     #replace me to suit real environment
  StorageMgmtAllocationPools: [{'start': '172.24.9.10', 'end': '172.24.9.200'}]    #replace me to suit real environment
  TenantAllocationPools: [{'start': '172.25.9.10', 'end': '172.25.9.200'}]    #replace me to suit real environment
  ExternalAllocationPools: [{'start': '10.240.116.121', 'end': '10.240.116.126'}]   #replace me to suit real environment
  # Leave room if the external network is also used for floating IPs
  # Gateway router for the external network
  ExternalInterfaceDefaultRoute: 10.240.116.1    #replace me to suit real environment
  # Define the DNS servers (maximum 2) for the overcloud nodes
  DnsServers: ["10.240.0.10", "10.240.0.11"]   #replace me to suit real environment
  # Set to empty string to enable multiple external networks or VLANs
  NeutronExternalNetworkBridge: "''"
  # The tunnel type for the tenant network (vxlan or gre). Set to '' to disable tunneling.
  NeutronTunnelTypes: ''
  NeutronNetworkType: 'vlan'
  # The OVS logical->physical bridge mappings to use.
  NeutronBridgeMappings: 'datacentre:br-ex,dpdk:br-link'
  # The Neutron ML2 and OpenVSwitch vlan mapping range to support.
  NeutronNetworkVLANRanges: 'datacentre:100:100,dpdk:101:109'     #replace me to suit real environment

  ########################
  # OVS DPDK configuration
  ########################
  # For OVS-DPDK-BONDs
  DpdkBondInterfaceOvsOptions: "bond_mode=balance-tcp lacp=active"     #replace me to suit real environment
  LinuxBondInterfaceOptions: "mode=4 lacp_rate=1 updelay=1000 miimon=100"    #replace me to suit real environment

  ## NeutronDpdkCoreList and NeutronDpdkMemoryChannels are REQUIRED settings.
  ## Attempting to deploy DPDK without appropriate values will cause deployment to fail or lead to unstable deployments.
  # List of cores to be used for DPDK Poll Mode Driver
  NeutronDpdkCoreList: "'16,17,18,19,36,37,38,39,56,57,58,59,76,77,78,79'"

  # Number of memory channels to be used for DPDK
  NeutronDpdkMemoryChannels: "2"

  # NeutronDpdkSocketMemory
  NeutronDpdkSocketMemory: "2048,2048"

  # NeutronDpdkDriverType
  NeutronDpdkDriverType: "vfio-pci"

  # Datapath type for ovs bridges
  NeutronDatapathType: "netdev"

  # The vhost-user socket directory for OVS
  NeutronVhostuserSocketDir: "/var/lib/vhost_sockets"


  ########################
  # Additional settings
  ########################
  # Reserved RAM for host processes
  NovaReservedHostMemory: 16384

  # A list or range of physical CPU cores to reserve for virtual machine processes.
  # Example: NovaVcpuPinSet: ['4-12','^8'] will reserve cores from 4-12 excluding 8
  NovaVcpuPinSet: "4-15,24-35,44-55,64-75"

  # An array of filters used by Nova to filter a node.These filters will be applied in the order they are listed,
  # so place your most restrictive filters first to make the filtering process more efficient.
  NovaSchedulerDefaultFilters: "RamFilter,ComputeFilter,ServerGroupAffinityFilter,ServerGroupAntiAffinityFilter,AvailabilityZoneFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,PciPassthroughFilter,NUMATopologyFilter"

  # Kernel arguments for Compute node
  ComputeKernelArgs: "isolcpus=4-19,24-39,44-59,64-79 nohz_full=4-19,24-39,44-59,64-79 default_hugepagesz=1GB hugepagesz=1G hugepages=128 iommu=pt intel_iommu=on"

  # A list or range of physical CPU cores to be tuned.
  # The given args will be appended to the tuned cpu-partitioning profile.
  # Must match isolcpus
  # HostIsolatedCoreList = NeutronDpdkCoreList(12-15) + NovaVcpuPinSet(16-23)
  HostIsolatedCoreList: "4-19,24-39,44-59,64-79"

  # Set a list or range of physical CPU cores that should be excluded from tuning:
  HostCpusList: "'0,1,2,3,20,21,22,23,40,41,42,43,60,61,62,63'"
